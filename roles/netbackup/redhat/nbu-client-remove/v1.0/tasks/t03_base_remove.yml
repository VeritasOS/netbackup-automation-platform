#$Copyright: Copyright (c) 2024 Veritas Technologies LLC. All rights reserved. $

#############################################################
#### nbu-client-remove -> tasks -> t03_base_remove.yml ####
#############################################################

# Define the install start time as variable
- name: "NBU-CLIENT-{{ nbu_playbook_type|upper }} -> Start NetBackup Removal Playbook"
  ansible.builtin.set_fact:
    status: "started"
    install_time: "{{ lookup('pipe','date +%Y%m%d%H%M%S') }}"

# Verify whether the NetBackup client has the NetBackup server software installed
# The install will not be performed if the client is a NetBackup server
- name: "NBU-CLIENT-{{ nbu_playbook_type|upper }} -> Verify whether NetBackup server software is currently installed"
  ansible.builtin.include_role:
    name: 'generic/server_check'

- name: "NBU-CLIENT-{{ nbu_playbook_type|upper }} -> LINUX -> Check if {{ os_path_nbu_log_vxlogcfg }} exists"
  stat:
    path: "{{ os_path_nbu_log_vxlogcfg }}"
  register: vxlogcfg_present_register
  changed_when: false
  failed_when: false

- block:
  - name: "NBU-CLIENT-{{ nbu_playbook_type|upper }} -> LINUX -> Check NB registered with vxlogcfg"
    shell: "{{ os_path_nbu_log_vxlogcfg }} -l | grep 'NB,nb'"
    failed_when: false
    register: vxlogcfg

  - name: "NBU-CLIENT-{{ nbu_playbook_type|upper }} -> LINUX ->  execute {{ os_path_nbu_log_vxlogcfg }} -r -p 51216"
    shell: '{{ os_path_nbu_log_vxlogcfg }} -r -p 51216'
    failed_when: false
    when: vxlogcfg.rc == 0
  when: vxlogcfg_present_register.stat.exists

- name: "NBU-CLIENT-{{ nbu_playbook_type|upper }} -> LINUX -> Check if /opt/pdde/pddeuninstall.sh Exists"
  stat:
    path: "/opt/pdde/pddeuninstall.sh"
  register: pddeuninstall_check_register
  changed_when: false
  failed_when: false

- name: "NBU-CLIENT-{{ nbu_playbook_type|upper }} -> Get list of yum repos (to disable them temporarily)"
  ansible.builtin.shell: yum -q repolist |  awk '{print $1}' | egrep -v -i "status|baseos|appstream" | awk -F'/' '{print $1}'
  register: yum_repolist_register
  changed_when: False

- name: "NBU-CLIENT-{{ nbu_playbook_type|upper }} -> Set fact list of yum repos (to disable them temporarily)"
  ansible.builtin.set_fact:
      yum_repolist_output_register: "{{ yum_repolist_output_register }}{{ item }},"
  changed_when: False
  with_items: "{{ yum_repolist_register.stdout_lines }}"
  no_log: true
  when: item != "repo"

- name: "NBU-CLIENT-{{ nbu_playbook_type|upper }} -> Remove the trailing special character"
  ansible.builtin.set_fact:
    yum_repolist_output_register: "{{ yum_repolist_output_register[:-1] }}"

- name: "NBU-CLIENT-{{ nbu_playbook_type|upper }} -> LINUX -> Check if VRTSnbcfg is removed"
  ansible.builtin.yum:
    name: "{{ nbu_client_rpm_vrtsnbcfg }}"
    state: absent
    disablerepo: "{{ yum_repolist_output_register }}"
    enablerepo: netbackup

- name: "NBU-CLIENT-{{ nbu_playbook_type|upper }} -> LINUX -> Execute /opt/pdde/pddeuninstall.sh -forceclean"
  shell: '/opt/pdde/pddeuninstall.sh -forceclean'
  when: pddeuninstall_check_register.stat.exists
  failed_when: false

- name: "NBU-CLIENT-{{ nbu_playbook_type|upper }} -> LINUX -> Remove NetBackup Software RPMs"
  ansible.builtin.yum:
    name: 
      - "{{ item.key }}"
    state: absent
    validate_certs: no
    disablerepo: "{{ yum_repolist_output_register }}"
    enablerepo: netbackup
  register: result
  with_items:
    - "{{ nbu_client_rpms_ordered_list[nbu_version] | dict2items | reverse }}"
  when: 
    - ( item.key not in ['VRTSpbx'] )  
    - not (result.rc|d(0)) # Make sure that the loop exits if any RPM Removal fails.

# Remove EEB Marker packages here, so not picked up by the VRTSpbx check
- name: "NBU-CLIENT-{{ nbu_playbook_type|upper }} -> LINUX -> Remove EEB RPM Markers"
  ansible.builtin.shell: ( rpm -qa | grep {{ nbu_eeb_prefix }} | while read line; do rpm -e $line; done)
  failed_when: false
  when: include_eeb_rpm_marker

- name: "NBU-CLIENT-{{ nbu_playbook_type|upper }} -> LINUX -> Check If VRTSpbx Might Be In Use By Other Veritas Products"
  shell: 'rpm -qa | egrep "SYMC|VRTS" | grep -v {{ nbu_client_rpm_pbx }} | wc -l'
  register: pbx_other_products_check_register
  changed_when: false
  # failed_when: false
  
# Remove the version of VRTSpbx that comes with proposed version, if nothing else is using it.
# wc -l in above statement returns char rather then integer, hence check for "0"
- name: "NBU-CLIENT-{{ nbu_playbook_type|upper }} -> LINUX -> Remove {{ nbu_client_rpm_pbx }} If No Other Product Using It"
  ansible.builtin.yum:
    name: "{{ nbu_client_rpm_pbx }}"
    state: absent
    disablerepo: "{{ yum_repolist_output_register }}"
    enablerepo: netbackup
  when: pbx_other_products_check_register.stdout == "0"

- name: "NBU-CLIENT-{{ nbu_playbook_type|upper }} -> LINUX -> Delete NetBackup Client Directories"
  ansible.builtin.file:
    state: absent
    path: "{{ item }}"
  with_items: "{{nbu_directory_list_to_be_removed}}"

# EOF
