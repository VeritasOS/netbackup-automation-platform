# $Copyright: Copyright (c) 2024 Veritas Technologies LLC. All rights reserved $

# Perform disk space validation for the required file systems
# Gather file system disk space usage
- name: "NBU-CLIENT-{{ nbu_playbook_type|upper }} -> Get disk space information for {{ os_path_nbu_base }}"
  ansible.builtin.shell: df -m --output=source,avail,target {{ os_path_nbu_base }}
  register: nbu_install_path_register
  no_log: true

- name: "NBU-CLIENT-{{ nbu_playbook_type|upper }} -> Get disk space information for {{ os_path_nbu_yum_cache_base }}"
  ansible.builtin.shell: df -m --output=source,avail,target {{ os_path_nbu_yum_cache_base }}
  register: nbu_yum_cache_path_register
  no_log: true

- name: "NBU-CLIENT-{{ nbu_playbook_type|upper }} -> set os_path_space_validation fact based on playbook type"
  set_fact:
    os_path_space_validation: "{{ os_path_install_space_validation }}"
  when: nbu_playbook_type == "install"

- name: "NBU-CLIENT-{{ nbu_playbook_type|upper }} -> set os_path_space_validation fact based on playbook type"
  set_fact:
    os_path_space_validation: "{{ os_path_upgrade_space_validation }}"
  when: nbu_playbook_type == "upgrade"

# Set file_system_array ['path':,'space_required':,'space_available']
- name: "NBU-CLIENT-{{ nbu_playbook_type|upper }} -> Space required in {{ os_path_nbu_base }}"
  set_fact:
    file_system_array: "{{ file_system_array | default([]) + [ { 'path': os_path_root_file_system, 'space_required': os_path_space_validation[0].space_required_MB, 'space_available': nbu_install_path_register.stdout_lines[1].split()[1] | int } ] }}"
  when:
  - nbu_install_path_register.stdout_lines[1].split()[2] == os_path_root_file_system
  - nbu_yum_cache_path_register.stdout_lines[1].split()[2] != os_path_root_file_system

- name: "NBU-CLIENT-{{ nbu_playbook_type|upper }} -> Space required in {{ os_path_nbu_yum_cache_base }}"
  set_fact:
    file_system_array: "{{ file_system_array | default([]) + [ { 'path': os_path_root_file_system, 'space_required': os_path_space_validation[1].space_required_MB, 'space_available': nbu_yum_cache_path_register.stdout_lines[1].split()[1] | int } ] }}"
  when:
  - nbu_yum_cache_path_register.stdout_lines[1].split()[2] == os_path_root_file_system
  - nbu_install_path_register.stdout_lines[1].split()[2] != os_path_root_file_system

- name: "NBU-CLIENT-{{ nbu_playbook_type|upper }} -> Space required in {{ os_path_nbu_base }} and {{ os_path_nbu_yum_cache_base }}"
  set_fact:
    file_system_array: "{{ file_system_array | default([]) + [ { 'path': nbu_install_path_register.stdout_lines[1].split()[2], 'space_required': os_path_space_validation[0].space_required_MB + os_path_space_validation[1].space_required_MB, 'space_available': nbu_install_path_register.stdout_lines[1].split()[1] | int } ] }}"
  when:
  - nbu_install_path_register.stdout_lines[1].split()[2] == os_path_root_file_system
  - nbu_yum_cache_path_register.stdout_lines[1].split()[2] == os_path_root_file_system

- name: "NBU-CLIENT-{{ nbu_playbook_type|upper }} -> Space required in {{ os_path_nbu_base }}"
  set_fact:
    file_system_array: "{{ file_system_array | default([]) + [ { 'path': nbu_install_path_register.stdout_lines[1].split()[2], 'space_required': os_path_space_validation[0].space_required_MB, 'space_available': nbu_install_path_register.stdout_lines[1].split()[1] | int } ] }}"
  when:
  - nbu_install_path_register.stdout_lines[1].split()[2] != os_path_root_file_system

- name: "NBU-CLIENT-{{ nbu_playbook_type|upper }} -> Space required in {{ os_path_nbu_yum_cache_base }}"
  set_fact:
    file_system_array: "{{ file_system_array | default([]) + [ { 'path': nbu_yum_cache_path_register.stdout_lines[1].split()[2], 'space_required': os_path_space_validation[1].space_required_MB, 'space_available': nbu_yum_cache_path_register.stdout_lines[1].split()[1] | int } ] }}"
  when:
  - nbu_yum_cache_path_register.stdout_lines[1].split()[2] != os_path_root_file_system

- name: "NBU-CLIENT-{{ nbu_playbook_type|upper }} -> Verify the available disk space on required file systems"
  assert:
      that: "{{ item.space_available > item.space_required }}"
      success_msg: "PASS - {{ item.path }} have required available disk space - {{ item.space_available }} MB free"
      fail_msg: "FAILED - Insufficient disk space in {{ item.path }}. Required {{ item.space_required }} MB of free diskspace"
      quiet: false
  with_items: "{{ file_system_array }}"

# EOF