# $Copyright: Copyright (c) 2024 Veritas Technologies LLC. All rights reserved $

###############################################################
#### nbu-client-install -> tasks -> t01_base_patch_eeb.yml ####
###############################################################

- name: "NBU-EEB-INSTALL -> Set fact EEB Task"
  ansible.builtin.set_fact:
     eeb_task_type: "{{ 'uninstall' if 'uninstall' in item else 'install' }}"

# Check whether history.log file exists or not
- name: "NBU-EEB-INSTALL -> Check whether History.log exists or not"
  win_stat:
    path: "{{ os_path_nbu_install }}\\Patch\\History.log"
  register: history_log_check_register

# Check whether EEB is already installed
- name: "NBU-EEB-INSTALL -> Check whether NetBackup EEB is already {{ eeb_task_type }}ed - {{ eeb_name }}"
  win_shell: ( findstr {{ nbu_eeb_file_id }}_EEB{{ nbu_eeb_file_ver }} "{{ os_path_nbu_install }}\Patch\History.log" )
  no_log: false
  args:
    executable: cmd
  register: eeb_check_register
  failed_when: false

## Download the NetBackup EEB
- name: "Download NetBackup EEB {{ eeb_name }} to {{ nbu_tmp_dir }}"
  block:
    - name: "NBU-EEB-INSTALL -> Download NetBackup EEB {{ eeb_name }} to {{ nbu_tmp_dir }}"
      win_get_url:
        url: "{{ nbu_artifactory_repo_base_url }}{{ artifactory_repo }}{{ nbu_path_repo_client_eeb_pkg }}{{ eeb_name }}.exe"
        dest: "{{ nbu_tmp_dir }}"
        force: "{{ nbu_repo_force }}"
        validate_certs: "{{ nbu_repo_validate_certs }}"

    # Check NetBackup EEB installer version
    - name: "NBU-EEB-INSTALL -> Check NetBackup EEB installer version - {{ eeb_name }}"
      win_shell: (@echo off && for /F "tokens=2 delims=:" %r in ('"{{ nbu_tmp_dir }}\{{ eeb_name }}.exe -inst_ver -no_questions"') do echo %r && echo on)
      args:
        executable: cmd
      no_log: false
      register: eeb_install_version_register

    # Using -eeb_ver option we are getting the eeb NetBackup version.
    # but -eeb_ver option was added at EEBinstaller version 5.23. you can determine EEBinstaller version with
    # the -inst_ver option.
    # Otherwise, the -readme should include the version.
    # Check installer NetBackup EEB version is greater than 5.23
    - name: "NBU-EEB-INSTALL -> Check whether NetBackup EEB is greater than 5.23 - VRTSnbeeb_{{ nbu_eeb_file_id }}-{{ nbu_eeb_file_ver }}-{{ nbu_version }}"
      block:
        - name: "NBU-EEB-INSTALL -> Read NetBackup version with -eeb_ver option of EEB"
          win_shell: ( @echo off && for /F "tokens=2 delims=_" %r in ('"{{ nbu_tmp_dir }}\{{ eeb_name }}.exe -eeb_ver -no_questions"') do echo %r && echo on )
          args:
            executable: cmd
          ignore_errors: true
          no_log: True
          register: eeb_netbackup_version_register
      when: eeb_install_version_register.stdout | float >= 5.23

    # Check whether NetBackup EEB version is less than 5.23
    - name: "NBU-EEB-INSTALL -> Check whether NetBackup EEB is less than 5.23 - VRTSnbeeb_{{ nbu_eeb_file_id }}-{{ nbu_eeb_file_ver }}-{{ nbu_version }}"
      block:
        - name: "NBU-EEB-INSTALL -> Read NetBackup version from readme of EEB"
          win_shell: (@echo off && for /F %s in ('"{{ nbu_tmp_dir }}\{{ eeb_name }}.exe -r -no_questions | findstr NetBackup_"') do (for /F "tokens=2 delims=_" %a in ("%s") do echo %a && echo on))
          args:
            executable: cmd
          no_log: True
          ignore_errors: true
          register: eeb_netbackup_version_register
      when: eeb_install_version_register.stdout | float < 5.23

    - name: "Setfact EEB NetBackup Version"
      ansible.builtin.set_fact:
        eeb_netbackup_version: "{{ eeb_netbackup_version_register.stdout | default(nbu_version) | regex_replace('[\\r\\n\\t]+','') | regex_replace(' ', '') }}"

    - name: "Formatting NetBackup Version into x.x.x.x format"
      ansible.builtin.set_fact:
        eeb_netbackup_version: "{{ eeb_netbackup_version + '.' + '0' * (1 - (eeb_netbackup_version | regex_replace('.', '') | length) ) }}"
      when: eeb_netbackup_version | regex_findall('\.') | length < 3
      with_items: "{{ range(3) | list }}"
      loop_control:
        loop_var: item2

    # Install NetBackup EEB File when the EEB version is same with NBU version
    # EEB Marker program is not already installed.
    - name: "NBU-EEB-INSTALL -> Install NetBackup EEB - {{ eeb_name }}"
      block:
        # # NetBackup - Install NetBackup Client Software - Windows
        - name: "NBU-EEB-INSTALL -> Install NetBackup EEB {{ eeb_name }} on Windows Client"
          win_command: "{{ nbu_tmp_dir }}\\{{ eeb_name }}.exe {{ eeb_execution_flag }}  -no_questions"
          failed_when: false
          changed_when: false
          no_log: true
          register: eeb_install_status_register

          # Failed when the EEB installation fails.
        - name: Ansible::Log.info
          fail:
            msg:  "The provided EEB {{ eeb_name }} failed to install successfully, therefore exit immediately."
          when:
            - eeb_install_status_register.rc != 0
      when:
        - eeb_netbackup_version is version_compare(nbu_version,'==')

    # Failed when the installer netbackup EEB version is lower or higher than NBU version.
    - name: Ansible::Log.info
      fail:
        msg:  "The provided EEB {{ eeb_name }} belongs to NetBackup Client {{ eeb_netbackup_version }}, therefore exit immediately."
      when:
        - eeb_netbackup_version is version_compare(nbu_version,'<') or eeb_netbackup_version is version_compare(nbu_version,'>')
  when :
   - ( eeb_task_type == "install" )
   - ( history_log_check_register.stat.exists == false ) or ( eeb_check_register.rc == 1 ) or ( eeb_check_register.rc == 2 )


- name: Ansible::Log.info
  debug:
    msg:  "The provided EEB ({{ eeb_name }}) is already installed."
  when:
    - eeb_check_register.rc == 0
    - ( eeb_task_type == "install" )

# This block will get execute only if -uninstall flag is provided with EEB
- name: "NBU-EEB-INSTALL -> Retrieve NetBackup EEB {{ eeb_name }} path from remote host"
  block:
    - name: "NBU-EEB-INSTALLL -> Set-fact EEB details"
      ansible.builtin.set_fact:
        path_netbackup: "{{ eeb_check_register.stdout.split('_')[1]}}_{{eeb_check_register.stdout.split('_')[2] }}"
        path_eeb_installer: "{{ eeb_check_register.stdout.split('_')[3] }}_{{ eeb_check_register.stdout.split('_')[4] }}_{{ eeb_check_register.stdout.split('_')[5] | regex_replace('\\r\\n', '') }}"

    - name: "NBU-EEB-INSTALL -> Set-fact local EEB path"
      ansible.builtin.set_fact:
        eeb_installation_path: "{{ os_path_nbu_install }}\\Patch\\EEB\\{{ path_netbackup }}\\{{ path_eeb_installer }}_x64"

    - name: "NBU-EEB-INSTALL -> {{ eeb_task_type|capitalize }} NetBackup EEB - {{ eeb_name }}"
      win_command: "{{ eeb_name }}.exe {{ eeb_execution_flag }} -no_questions"
      args:
        chdir: "{{ eeb_installation_path }}"
      failed_when: false
      changed_when: false
      no_log: True
      register: eeb_uninstall_status_check_register

    - name: Ansible::Log.info
      assert:
        that: ( eeb_uninstall_status_check_register.rc == 0 )
        fail_msg: "The provided EEB {{ eeb_name }} failed to uninstall successfully, therefore exit immediately."
        success_msg: "The provided EEB {{ eeb_name }} uninstalled successfully."
  when:
   - ( eeb_task_type == "uninstall" )
   - ( eeb_check_register.rc == 0 )

- name: "NBU-EEB-INSTALL -> Remove NetBackup EEB file from {{ nbu_tmp_dir }} - {{ eeb_name }}"
  win_file:
    path: "{{ nbu_tmp_dir }}\\{{ eeb_name }}.exe"
    state: absent

- name: "NBU-EEB-INSTALL -> Install NetBackup EEB Marker File - {{ nbu_eeb_marker_name }}"
  block:
      # Check whether EEB marker file exists
    - name: "NBU-EEB-INSTALL -> Check whether NetBackup EEB marker is already {{ eeb_task_type }}ed - {{ nbu_eeb_marker_name }}"
      win_stat:
        path: "{{ os_path_nbu_install }}\\Patch\\EEB-Marker\\{{ nbu_eeb_file_id }}_{{ nbu_eeb_file_ver }}.ini"
      register: eeb_marker_check_register

    - name: "NBU-EEB-INSTALL -> Install NetBackup EEB Marker File - {{ nbu_eeb_marker_name }}"
      block:
        - name: "NBU-EEB-INSTALL -> Download NetBackup {{ nbu_eeb_marker_name }} Marker to {{ nbu_tmp_dir }}"
          win_get_url:
            url: "{{ nbu_artifactory_repo_base_url }}{{ artifactory_repo }}{{ nbu_path_repo_client_eeb_pkg }}/Veritas NetBackup Client EEB ({{ nbu_eeb_file_id }}_{{ nbu_eeb_file_ver }}).msi"
            dest: "{{ nbu_tmp_dir }}"
            force: "{{ nbu_repo_force }}"
            validate_certs: "{{ nbu_repo_validate_certs }}"

        - name: "NBU-EEB-INSTALL -> Install NetBackup EEB Marker from {{ nbu_tmp_dir }} - {{ nbu_eeb_marker_name }}"
          win_package:
            path: "{{ nbu_tmp_dir }}\\Veritas NetBackup Client EEB ({{ nbu_eeb_file_id }}_{{ nbu_eeb_file_ver }}).msi"
            state: present

        - name: "NBU-EEB-INSTALL -> Remove NetBackup EEB Marker from {{ nbu_tmp_dir }} - {{ nbu_eeb_marker_name }}.msi"
          win_file:
            path: "{{ nbu_tmp_dir }}\\Veritas NetBackup Client EEB ({{ nbu_eeb_file_id }}_{{ nbu_eeb_file_ver }}).msi"
            state: absent
      when:
        - ( eeb_marker_check_register.stat.exists == false )

    - name: Ansible::Log.info
      debug:
        msg:  "The provided NetBackup EEB Marker [{{ nbu_eeb_marker_name }}] is already installed."
      when:
        - eeb_marker_check_register.stat.exists
  when: eeb_task_type == "install"
