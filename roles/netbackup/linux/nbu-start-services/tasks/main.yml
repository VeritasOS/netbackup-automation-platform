# $Copyright: Copyright (c) 2025 Veritas Technologies LLC. All rights reserved $

#####################################################################
#### nbu-start-services -> tasks -> main.yml ####
#####################################################################
# Start NetBackup services and related services on Primary and or Media Server.
- name: "NBU-START-SERVICES -> Verifying that required NetBackup Startup scripts exist"
  ansible.builtin.stat:
    path: "{{ file_item }}"
  loop:
    - "{{ os_file_nbu_bpstart }}"
    - "{{ os_file_nbu_bpps }}"
  register: netbackup_files_check_register
  loop_control:
    loop_var: file_item
  failed_when: false
  changed_when: false

- name: "NBU-START-SERVICES -> Attempt to start NetBackup processes"
  block:
    - name: "NBU-START-SERVICES -> Checking pbx_exchange already running"
      ansible.builtin.shell: "{{ os_file_nbu_bpps }} -x | grep VRTSpbx | grep pbx_exchange | wc -l"
      register: bpps_register
      failed_when: false
      changed_when: false

    - name: "NBU-START-SERVICES -> Starting vxpbx_exchanged if vxpbx_exchanged not running"
      ansible.builtin.service:
        name: vxpbx_exchanged
        state: started
        use: sysvinit
      when: bpps_register.stdout|int == 0

    - name: "NBU-START-SERVICES -> Starting NetBackup, even if single NetBackup service is not in running state."
      ansible.builtin.shell: 
        cmd: "echo y | {{ os_file_nbu_bpstart }}"
      register: service_start_register
      retries: 2
      delay: 5
      until: service_start_register.rc == 0
      no_log: true
      failed_when: false

    - name: "NBU-START-SERVICES -> Force failure when all services are not Started"
      ansible.builtin.assert:
        that:
          - service_start_register.rc is defined
          - service_start_register.rc == 0
        fail_msg: "Failed to start one of the NetBackup Service, check logs for details. \n {{ service_start_register.stdout_lines }}"
        quiet: false
  when:
    - netbackup_files_check_register.results[0].stat.exists
    - netbackup_files_check_register.results[1].stat.exists
