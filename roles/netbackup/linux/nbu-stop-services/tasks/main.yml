# $Copyright: Copyright (c) 2025 Veritas Technologies LLC. All rights reserved $

#############################################################
#               Stop NetBackup Services   
# We will attempt 3 times to stop process gracefully.
# If we still find any process running, will force terminate 
#############################################################

- name: "NBU-STOP-SERVICES -> Verify file existence"
  ansible.builtin.stat:
    path: "{{ file_item }}"
  loop:
    - "{{ os_path_nbu_install_default }}/netbackup/bin/bp.kill_all"
    - "{{ os_path_nbu_install_default }}/netbackup/bin/bpps"
  register: netbackup_files_check_register
  loop_control:
    loop_var: file_item
  failed_when: false
  changed_when: false

- name: "NBU-STOP-SERVICES -> Attempt to stop NetBackup processes"
  block:
    - name: "NBU-STOP-SERVICES -> Attempt to stop NetBackup processes"
      ansible.builtin.shell: 
        cmd: "echo y | {{ os_path_nbu_install_default }}/netbackup/bin/bp.kill_all"
      register: bp_kill_result
      retries: 2
      delay: 5
      until: bp_kill_result.rc == 0
      no_log: True
      failed_when: false

    - name: "NBU-STOP-SERVICES -> Get the list of NetBackup processes still running"
      ansible.builtin.shell:
        cmd: "sleep 5 && {{ os_path_nbu_install_default }}/netbackup/bin/bpps -n | awk '{print $2, $8}'"
      register: running_processes_register

    - name: "NBU-STOP-SERVICES -> Terminate running processes"
      ansible.builtin.shell:
        cmd: "kill -9 {{ running_process_item.split(' ')[0] }}"
      loop: "{{ running_processes_register.stdout_lines }}"
      loop_control:
        loop_var: running_process_item
      when: should_force_process_termination | default(false)
      failed_when: false
  when:
  - netbackup_files_check_register.results[0].stat.exists
  - netbackup_files_check_register.results[1].stat.exists