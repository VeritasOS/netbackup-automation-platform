# $Copyright: Copyright (c) 2025 Veritas Technologies LLC. All rights reserved $

# Verify if the proposed NetBackup software version is compatible to installed primary.
- name: "NBU-COMPATIBILITY -> URL formation with key and port"
  ansible.builtin.set_fact:
    nbu_api_base_url: "{{ 'https://' + nbu_primary_server_ans + ':' + nbu_api_port + '/netbackup/' }}"

- name: "NBU-COMPATIBILITY -> Load Primary Server info"
  win_uri:
    url: "{{ nbu_api_base_url + 'security/serverinfo' }}"
    method: GET
    return_content: yes
    validate_certs: no
  register: api_serverinfo_response_register
  failed_when: false

- name: "NBU-COMPATIBILITY -> Failed to access primary server"
  ansible.builtin.fail:
    msg: "Failed to access primary server url {{ nbu_api_base_url + 'security/serverinfo' }}"
  ignore_errors: "{{ ignore_primary_connectivity_failures }}"
  when:
    - api_serverinfo_response_register.status_code != 200

- name: "NBU-COMPATIBILITY -> Perform primary server version compatibility check"
  block:
    - name: "NBU-COMPATIBILITY -> Set primary server current version"
      ansible.builtin.set_fact:
        nbu_primary_current_version: "{{ api_serverinfo_response_register.json.nbuVersion.split('_')[1] }}"

    # Formatting NetBackup Version into x.x.x.x format
    - name: "NBU-COMPATIBILITY -> Formatting NetBackup Version into x.x.x.x format"
      ansible.builtin.set_fact:
        nbu_primary_current_version: "{{ nbu_primary_current_version + '.' + '0' * (1 - (nbu_primary_current_version | regex_replace('.', '') | length) ) }}"
      when: nbu_primary_current_version | regex_findall('\.') | length < 3
      loop: "{{ range(3) | list }}"

    - name: "NBU-COMPATIBILITY -> Check if Primary server version is compatible to proposed version"
      ansible.builtin.assert:
        that:
          - nbu_version is version_compare(nbu_primary_current_version ,'<=')
        fail_msg: "Proposed 'nbu_version: {{ nbu_version }}' should be equal or less than primary server current version ({{ nbu_primary_current_version }})"
        success_msg: "Proposed 'nbu_version: {{ nbu_version }}' is compatible to primary server current version ({{ nbu_primary_current_version }})"
      ignore_errors: "{{ skip_primary_version_compatibility_check }}"
  when: api_serverinfo_response_register.status_code == 200

# EOF
