# $Copyright: Copyright (c) 2024 Veritas Technologies LLC. All rights reserved $

# Once NBCheck is externally executed successfully, create the touch file to avoid re-running it from within the RPM.
- name: "NBU-NBCHECK ->  Create the nbcheck marker file"
  block:
    - name: "NBU-NBCHECK -> Get [/tmp/client_traditional_install] file age"
      ansible.builtin.find:
        paths: "/tmp/"
        pattern: "client_traditional_install"
        age: 2h
      register: install_file_age_register
      no_log: true

    - name: "NBU-NBCHECK -> Delete [/tmp/client_traditional_install] file, if it's older than 2hr"
      ansible.builtin.file:
        path: /tmp/client_traditional_install
        state: absent
      when: install_file_age_register.matched|int > 0

    - name: "NBU-NBCHECK -> Verify [/tmp/client_traditional_install] file existence"
      stat:
        path: /tmp/client_traditional_install
      register: traditional_install_file_register
      no_log: true
  when: nbu_role == "client"

- name: "NBU-NBCHECK -> Start NBChecks executions"
  block:
    - name: "NBCHECK -> Include tasks for NBChecks"
      ansible.builtin.include_tasks: "{{ ansible_system|lower }}.yml"

    - name: "NBCHECK -> Executing NBChecks"
      ansible.builtin.include_tasks: "nbcheck.yml"
      with_items: "{{ test_name_list }}"

    # Create temp file once NBCheck run. So that NBCheck should not get called through rpm again
    - name: "NBU-NBCHECK -> Create [/tmp/client_traditional_install] file for NBCheck"
      ansible.builtin.file:
        path: /tmp/client_traditional_install
        state: touch
        mode: u+rw,g-wx,o-rwx
      when: nbu_role == "client"
  when:
   - ( ( nbu_role =="media" ) or ( not traditional_install_file_register.stat.exists ) )
