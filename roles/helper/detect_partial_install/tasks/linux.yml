# $Copyright: Copyright (c) 2024 Veritas Technologies LLC. All rights reserved $

# Check file existence of /tmp/nbap_partial_install_detected
- name: "NBU-PARTIAL-INSTALL-DETECTION -> Verify {{ os_path_openv_tmp }}/nbap_partial_install_detected file existence"
  ansible.builtin.stat:
    path: "{{ os_path_openv_tmp }}/nbap_partial_install_detected"
  register: nbap_partial_install_register
  no_log: true
  failed_when: false

- name: "NBU-PARTIAL-INSTALL-DETECTION -> Read the file content if it exists"
  ansible.builtin.shell: "cat {{ os_path_openv_tmp }}/nbap_partial_install_detected"
  register: nbap_file_content_register
  when: ( nbap_partial_install_register.stat.exists )
  changed_when: false

- name: "NBU-PARTIAL-INSTALL-DETECTION -> Decode the file content {{ os_path_openv_tmp }}/nbap_partial_install_detected"
  ansible.builtin.fail:
    msg: "ERROR - The file '{{ os_path_openv_tmp }}/nbap_partial_install_detected' is unexpectedly empty, we request you to delete the file and re-run the playbook."
  when:
    - ( nbap_partial_install_register.stat.exists )
    - nbap_file_content_register.stdout_lines | length == 0

- name: "NBU-PARTIAL-INSTALL-DETECTION -> Decode the file content and set facts for its existence "
  ansible.builtin.set_fact:
    nbap_partial_install_detected: "{{ nbap_partial_install_register.stat.exists }}"
    nbap_partial_role_detected: "{{ nbap_file_content_register.stdout_lines[0] }}"
    nbap_previous_playbook_type: "{{ nbap_file_content_register.stdout_lines[1] }}"
  when:
    - ( nbap_partial_install_register.stat.exists )
    - nbap_file_content_register.stdout_lines | length > 0
#EOF