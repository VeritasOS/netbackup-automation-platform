# $Copyright: Copyright (c) 2024 Veritas Technologies LLC. All rights reserved $

# The install will not be performed if the playbook type is different from installed software on target host machine
# Verify whether the NetBackup software(Client/Media/Primary) is completely installed
- name: "NBU-ROLE-STATUS -> Check if {{ os_file_nbu_bpconf }} exists"
  ansible.builtin.stat:
    path: "{{ os_file_nbu_bpconf }}"
  register: os_file_nbu_bpconf_register
  failed_when: false
  changed_when: false

- name: "NBU-ROLE-STATUS -> Check if target host machine is Primary/Media/Client"
  block:
    - name: "NBU-ROLE-STATUS -> Read first entry in bp.conf"
      ansible.builtin.shell: ( cat {{ os_file_nbu_bpconf }} | egrep -v "^#" | grep SERVER | awk 'NR==1 {print $3}' )
      register: nbu_primary_server_register

    - name: "NBU-ROLE-STATUS -> Verify the nbwmc and nbmqbroker files exist on target host machine"
      ansible.builtin.stat:
        path: "{{ netbackup_file }}"
      register: nbu_primary_files_register
      with_items:
        - "{{ os_file_nbu_wmc }}"
        - "{{ os_file_nbu_mqbroker }}"
      loop_control:
        loop_var: netbackup_file
      failed_when: false

    - name: "NBU-ROLE-STATUS -> Fetch target host machine details as defined in ansible inventory file"
      set_fact:
        nbu_inventory_hostname: "{{ inventory_hostname }}"
        nbu_short_hostname: "{{ ansible_hostname }}"

    - name: "NBU-ROLE-STATUS -> Set NBU_Role to Primary if target host machine has primary server installed"
      block:
          - name: "NBU-ROLE-STATUS -> Set NBU_Role to Primary if target host machine has primary server installed" 
            ansible.builtin.set_fact:
              nbu_detected_role: "primary"

          - name: "NBU-ROLE-STATUS -> Check if NBU_Role is set to primary and skip all further tasks"
            set_fact:
              skip_next_tasks: true
            when: nbu_detected_role == "primary"

      when:
        - ( nbu_primary_server_register.stdout | string == nbu_inventory_hostname ) or ( nbu_primary_server_register.stdout | string == nbu_short_hostname ) 
        - ( nbu_primary_files_register.results[0].stat.exists ) 
        - ( nbu_primary_files_register.results[1].stat.exists )      

    - name: "NBU-ROLE-STATUS -> Check if target host machine is Media/Client"
      block:
      # Verify whether target host machine has the NetBackup client software installed
        - name: "NBU-ROLE-STATUS -> Verify whether NetBackup client software is currently installed"
          ansible.builtin.shell: ( rpm -qa | grep "{{ nbu_client_rpm_name }}" )
          changed_when: false
          register: nbu_client_rpm_check
          failed_when: false
 
        - name: "NBU-ROLE-STATUS -> Check if target host machine is Media/Client"
          block:
            - name: "NBU-ROLE-STATUS -> Check for existence of Primary/Media Server rpms."
              ansible.builtin.shell: ( rpm -qa | egrep "VRTSpddes|VRTSpddei|VRTSnetbp|VRTSnbslibs" )
              register: netbackup_server_rpm_list_register 
              changed_when: false
              failed_when: false
              no_log: true

            - name: "NBU-ROLE-STATUS -> Set NBU_Role to client if target host machine has NetBackup Client installed" 
              ansible.builtin.set_fact:
                nbu_detected_role: "client"
              when:  
                - netbackup_server_rpm_list_register.rc != 0 

            - name: "NBU-ROLE-STATUS -> Set NBU_Role to media if target host machine has NetBackup media installed" 
              ansible.builtin.set_fact:
                nbu_detected_role: "media"
              when:  
                - netbackup_server_rpm_list_register.rc == 0
          when: 
            - nbu_client_rpm_check.rc == 0 
      when:
        - not skip_next_tasks | default(false) 

    - name: "NBU-ROLE-STATUS -> Set nbu_role to nbu_detected_role:{{ nbu_detected_role }} if nbu_role is undefined" 
      ansible.builtin.set_fact:
        nbu_role: "{{ nbu_detected_role }}"
      when:
        - ( nbu_role is not defined )
    
  when:
    - os_file_nbu_bpconf_register.stat.exists

 



